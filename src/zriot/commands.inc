/**
 * ====================
 *     Zombie Riot
 *   File: commands.inc
 *   Author: Greyscale, Oz_Lin
 * ====================
 */
 
void CreateCommands()
{
    RegAdminCmd("zriot_restrict", Command_Restrict, ADMFLAG_GENERIC, "Restrict a specified weapon");
    RegAdminCmd("zriot_unrestrict", Command_UnRestrict, ADMFLAG_GENERIC, "Unrestrict a specified weapon");
    
    RegAdminCmd("zriot_setday", Command_SetDay, ADMFLAG_GENERIC, "Sets the game to a certain day");
    
    RegAdminCmd("zriot_zombie", Command_Zombie, ADMFLAG_GENERIC, "Turns player into zombie");
    RegAdminCmd("zriot_human", Command_Human, ADMFLAG_GENERIC, "Turns player into human");

    RegAdminCmd("zriot_setcount", Command_SetCount, ADMFLAG_CONFIG, "Sets Zombie count of current day");
    RegAdminCmd("zriot_sethealthboost", Command_SetHealthBoost, ADMFLAG_CONFIG, "Sets additional HP of zombies of current day");
}
    
public Action Command_Restrict(int client, int argc)
{
    bool enabled = GetConVarBool(gCvars.CVAR_ENABLE);
    if (argc < 1 || !enabled)
    {
        return Plugin_Handled;
    }
    
    char arg1[32];
    GetCmdArg(1, arg1, sizeof(arg1));
    
    WepRestrictQuery output = RestrictWeapon(arg1);
    
    if (output == Existing)
    {
        ZRiot_ReplyToCommand(client, "Weapon already restricted", arg1);
    }
    
    return Plugin_Handled;
}

public Action Command_UnRestrict(int client, int argc)
{
    bool enabled = GetConVarBool(gCvars.CVAR_ENABLE);
    if (argc < 1 || !enabled)
    {
        return Plugin_Handled;
    }
    
    char arg1[32];
    GetCmdArg(1, arg1, sizeof(arg1));
    
    WepRestrictQuery output = UnRestrictWeapon(arg1);
    
    if (output == Invalid)
    {
        ZRiot_ReplyToCommand(client, "Weapon invalid", arg1);
    }
    
    return Plugin_Handled;
}

public Action Command_SetDay(int client, int argc)
{
    bool enabled = GetConVarBool(gCvars.CVAR_ENABLE);
    if (argc < 1 || !enabled)
    {
        return Plugin_Handled;
    }
    
    char arg1[32];
    GetCmdArg(1, arg1, sizeof(arg1));
    
    int day = StringToInt(arg1) - 1;
    day = (day >= 0) ? day : 0;
    
    gDay = day;
    gDay = (gDay + 1 > dCount) ? dCount - 1 : gDay;
    
    ZRiot_PrintToChat(0, "Skip to day", gDay + 1);
    
    if (tHUD == INVALID_HANDLE)
    {
        return Plugin_Handled;
    }
    
    CS_TerminateRound(3.0, CSRoundEnd_Draw, true);
    
    return Plugin_Handled;
}

public Action Command_Zombie(int client, int argc)
{
    bool enabled = GetConVarBool(gCvars.CVAR_ENABLE);
    if (argc < 1 || !enabled)
    {
        return Plugin_Handled;
    }
    
    char arg1[32];
    GetCmdArg(1, arg1, sizeof(arg1));
    
    char target_name[MAX_TARGET_LENGTH];
    int targets[MAXPLAYERS];
    bool tn_is_ml;
    
    int tcount = ProcessTargetString(arg1, client, targets, MAXPLAYERS, COMMAND_FILTER_NO_BOTS, target_name, sizeof(target_name), tn_is_ml);
    if (tcount <= 0)
    {
        ReplyToTargetError(client, tcount);
        return Plugin_Handled;
    }
    
    for (int x = 0; x < tcount; x++)
    {
        ZRiot_Zombie(targets[x]);
    }
    
    if (GetLiveHumanCount() <= 0)
    {
        CS_TerminateRound(5.0, CSRoundEnd_TerroristWin, true);

        int score = CS_GetTeamScore(CS_TEAM_T);
        CS_SetTeamScore(CS_TEAM_T, score++);
    }
    
    return Plugin_Handled;
}

public Action Command_Human(int client, int argc)
{
    bool enabled = GetConVarBool(gCvars.CVAR_ENABLE);
    if (argc < 1 || !enabled)
    {
        return Plugin_Handled;
    }
    
    char arg1[32];
    GetCmdArg(1, arg1, sizeof(arg1));
    
    char target_name[MAX_TARGET_LENGTH];
    int targets[MAXPLAYERS];
    bool tn_is_ml;
    
    int tcount = ProcessTargetString(arg1, client, targets, MAXPLAYERS, COMMAND_FILTER_NO_BOTS, target_name, sizeof(target_name), tn_is_ml);
    if (tcount <= 0)
    {
        ReplyToTargetError(client, tcount);
        return Plugin_Handled;
    }
    
    for (int x = 0; x < tcount; x++)
    {
        ZRiot_Human(targets[x]);
    }
    
    return Plugin_Handled;
}

public Action Command_SetCount(int client, int argc)
{
    bool enabled = GetConVarBool(gCvars.CVAR_ENABLE);
    if (argc < 1 || !enabled)
    {
        return Plugin_Handled;
    }

    char sArg1[16];

    GetCmdArg(1, sArg1, sizeof(sArg1));

    int count = StringToInt(sArg1);

    if(count <= 0)
    {
        ZRiot_ReplyToCommand(client, "Usage Zombie Count");
        return Plugin_Handled;
    }

    ZRiot_PrintToChat(0, "Set Zombie Count", count);
    arrayDays[gDay].data_count = count;

    return Plugin_Handled;
}

public Action Command_SetHealthBoost(int client, int argc)
{
    bool enabled = GetConVarBool(gCvars.CVAR_ENABLE);
    if (argc < 1 || !enabled)
    {
        return Plugin_Handled;
    }

    char sArg1[16];

    GetCmdArg(1, sArg1, sizeof(sArg1));

    int hboost = StringToInt(sArg1);

    if(hboost < 0)
    {
        ZRiot_ReplyToCommand(client, "Usage Zombie Healthboost");
        return Plugin_Handled;
    }

    ZRiot_PrintToChat(0, "Set Zombie Healthboost", hboost);
    arrayDays[gDay].data_healthboost = hboost;

    return Plugin_Handled;
}